# When done, submit this entire file to the autograder.

# Part 1

def sum arr
  # YOUR CODE HERE
  if arr.empty?
    return 0
  else
    sum=0
    for i in arr
      sum+=i
    end
    return sum
  end
end

def max_2_sum arr
  # YOUR CODE HERE
  if arr.empty?
    return 0
  elsif arr.size==1
    return arr[0]
  else
    arr = arr.sort
    sum= arr[-1] + arr[-2]
    return sum
  end
end

def sum_to_n? arr, n
  # YOUR CODE HERE
  i=0
  while i<arr.size
    j=i+1
    while j<arr.size
      if  (arr[i]+arr[j]==n)
        return true
      end
      j=j+1
    end
    i=i+1
  end
  return false
end

# Part 2

def hello(name)
  # YOUR CODE HERE
  return "Hello, " + name.to_s
end

def starts_with_consonant? s
  # YOUR CODE HERE
 return (s =~ /[bcdfghjklmnpqrstvwxyz]/i) == 0
end

def binary_multiple_of_4? s
  # YOUR CODE HERE
  if s.count("^10")>0
    return false
  elsif s == ""
    return false
  else
    sum = s[-2].to_i+s[-1].to_i
    if sum ==0
      return true
    else
      return false
    end
  end
end

# Part 3

class BookInStock
# YOUR CODE HERE
  attr_accessor :isbn
  attr_accessor :price
	
  def initialize(isbn,price)
	@isbn = isbn
	@price = price
	if @price <= 0 or @isbn.empty? 
	   raise ArgumentError
	end
  end

  def price_as_string
       return "$#{'%.2f' %  @price}"
  end
end
